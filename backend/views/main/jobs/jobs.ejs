<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../public/styles/style.css">
    <title>Jobs </title>
</head>
<body>
    <div class="spinner">
        <div class="loader"></div>
    </div>
    <main class="job-desc" id="jobdDesc">
        <div class="job-descriptionDetails" id="jobdetailsDescription">
            <div class="jobdet-header">
                <button type="button" id="backButton" class="backbtn" onclick="history.back();return false;">Back</button>
                <h1>Job Description</h1>
            </div>
            
            <div class="job-Details-description" id="jobDescriptionDetails"></div>

            <div class="jobdet-apply">
                <button type="button" id="applyjobbtn" class="applyjob-btn">Apply</button>
                <button type="button" id="savejobbtn" class="savejob-btn">Save</button>
            </div>

            <div id="jobReviews" class="job-Reviews">
                <form id="uploadReviewForm" class="reviews-form" method="post">
                    <input name="message" type="text" placeholder="Add a review . . ."><br>
                    <input name="ratings" type="text" placeholder="Don't forget to leave a rating"><br>
                    <button type="submit" class="submit-review">Post</button>
                </form>
                <div id="reviewsDiv" class="reviews-div">
                    <div class="sucessDiv" id="successDiv"></div>
                    <div class="failDiv" id="failDiv"></div>
                </div>
            </div>
            <div class="jobdet-footer">
                <div class="otherJobs">Plumber</div>
                <div class="otherJobs">Carpenter</div>
                <div class="otherJobs">Mason</div>
            </div>
        </div>
    </main>
    <script>

        const loaderContainer = document.getElementsByClassName("loader")[0];
        const overlayPanel = document.getElementsByClassName("overlay")[0];
        const spinner = document.getElementsByClassName("spinner")[0];

        const urlParams = new URLSearchParams(window.location.search);
        const jobId = urlParams.get('asfdight/tyu/23/4r/typ-oup.i_oid');

        //const postReviewsBtn = document.getElementById('SubmitReview')

        async function displayJobDetails(jobId){
            spinner.style.display = "block";
            try{          
                const response = await fetch(`/api/jobs/${jobId}/details`);
                if(response.ok){
                    const jobDetailsContainer = document.getElementById('jobDescriptionDetails');
                    jobDetailsContainer.innerHTML = '';
                    const resData = await response.json();
                    const jobs = resData.job;
                    const emp_id = jobs.employer_id;

                    const jobDiv = document.createElement('div');
                    jobDiv.classList.add('jobdet-div');

                    const titleHeader = document.createElement('div');
                    titleHeader.classList.add('jobdet-title');
                    titleHeader.textContent = jobs.job_title;

                    const Job_type = document.createElement('div');
                    Job_type.classList.add('jobdet-type');
                    Job_type.textContent = jobs.job_type;
                        
                    const salaryPara = document.createElement('div');
                    salaryPara.classList.add('salary-range');
                    if (jobs.max_salary === null || jobs.max_salary == 0) {
                        salaryPara.textContent = `kes ${jobs.min_salary}`;
                    } else {
                        salaryPara.textContent = `kes ${jobs.min_salary} - ${jobs.max_salary}`;
                    }
                    
                    const shortDescPara = document.createElement('div');
                    shortDescPara.classList.add('jobdet-s-description');
                    shortDescPara.textContent = jobs.short_job_description;

                    const descriptionPara = document.createElement('div');
                    descriptionPara.classList.add('jobdet-description');
                    descriptionPara.textContent = jobs.job_description;

                    const locationPara = document.createElement('div');
                    locationPara.classList.add('jobdet-location');
                    locationPara.textContent = `Location: ${jobs.job_location}`;

                    const postedDatePara = document.createElement('div');
                    postedDatePara.classList.add('jobdet-posdate');
                    postedDatePara.textContent = `Posted Date: ${jobs.posted_date}`;

                    const empDetails = document.createElement('div');
                    empDetails.classList.add('jobdet-emp')

                    const empdet_title = document.createElement('p');
                    empdet_title.classList.add('empdet-title');
                    empdet_title.textContent = 'Employer Details';
                    
                    empDetails.appendChild(empdet_title);
                    async function fetchEmployer(){
                        try{ 
                            const employer = await fetch(`/api/users/${emp_id}/profile`);
                            const employer_details = document.getElementById('employer_details');

                            if(employer.ok){
                                const _employer = await employer.json();
                                
                                const empDetails = document.createElement('div');
                                empDetails.classList.add('emp-Details');

                                const empName = document.createElement('p');
                                empName.classList.add('jobdet_empname');
                                empName.textContent = `Name: ${_employer.first_name}`;

                                const empuName = document.createElement('p');
                                empuName.classList.add('jobdet_empUname');
                                empuName.textContent = `username: ${_employer.username}`;

                                empDetails.appendChild(empName);
                                empDetails.appendChild(empuName);

                                employer_details.appendChild(empDetails);

                            }else{
                                console.log('error ocurred while fetching employees details');
                            } 
                              
                        } catch (error) {
                            console.log('an error ocurred while fetching employer\'s details', error);
                        }
                    }

                    jobDiv.appendChild(Job_type);
                    jobDiv.appendChild(titleHeader);
                    jobDiv.appendChild(shortDescPara);
                    jobDiv.appendChild(descriptionPara);
                    jobDiv.appendChild(salaryPara);
                    jobDiv.appendChild(locationPara);
                    jobDiv.appendChild(postedDatePara);
                    jobDiv.appendChild(empDetails);
                    empDetails.id = 'employer_details';

                    jobDetailsContainer.appendChild(jobDiv);
                    fetchEmployer();
                    spinner.style.display = "none";
                    
                }
            }catch(error){
                console.error("an error ocurred while fetching job details", error);
            }
        }

        async function fetchReviews(){
            try {
                const response = await fetch(`/api/reviews/GetReviews`);
                if(response.ok){
                    const reviewsContainer = document.getElementById('reviewsDiv');
                    reviewsContainer.innerText = '';
                    const reviewsData = await response.json();
                    const reviews = reviewsData.reviews;
                    const userId = reviews.user_id;
                    
                    reviews.forEach((reviews)=>{
                        const reviewDescDiv = document.createElement('div');
                        reviewDescDiv.classList.add('reviewDescDiv');

                        const messagePara = document.createElement('div');
                        messagePara.classList.add('message');
                        messagePara.textContent = reviews.message;

                        const ratingsPara = document.createElement('div');
                        ratingsPara.classList.add('ratings');
                        ratingsPara.textContent = reviews.rating

                        const userDiv = document.createElement('div');
                        
                        async function getUsername(userId){
                            try{
                                const response = await fetch(`api/users/${userId}/profile`);
                                if(response.ok){
                                    const userData = response.users;

                                    userPara = document.createElement('div');
                                    userPara.classList.add('Creator');
                                    userPara.textContent = userData.username;

                                    userDiv.appendChild(userPara);
                                }
                            }catch(error){
                                console.log("an error ocurred while fetching user details for reviews");
                            }
                        }

                        getUsername(userId);

                        reviewDescDiv.appendChild(messagePara);
                        reviewDescDiv.appendChild(ratingsPara);
                        reviewDescDiv.appendChild(userDiv);

                        reviewsContainer.appendChild(reviewDescDiv);

                    });

                }
            } catch (error) {
                console.error("An error ocured while fetching reviews details", error);
            }
        }

        async function submitReviews(){
            const userCookie = document.cookie.split('; ').find(cookie => cookie.startsWith('user_id='));
            const formData = new FormData(this);

            const user_id = userCookie ? userCookie.split('=')[1] : null;
            const job_id = jobId;
            const message = formData.get('reviews');
            const ratings = formData.get('ratings');

            try {
                const response = await fetch('/api/reviews/create',{
                    method:'post',
                    headers:{
                        'Content-Type':'application/json'
                    },
                    body: JSON.stringify({user_id, job_id, message, ratings})
                });

                if(response.ok){
                    console.log("Sucesssfuly updated");
                }

            } catch (error) {
                console.log("an error ocurred while posting reviews details");
            }
        }

        document.getElementById('uploadReviewForm').addEventListener('submit', async function(event){
            event.preventDefault();

            const successDiv = document.getElementById('successDiv');
            const failDiv = document.getElementById('failDiv');

            const userCookie = document.cookie.split('; ').find(cookie => cookie.startsWith('user_id='));

            const formData = new FormData(this);

            const user_id = userCookie ? userCookie.split('=')[1] : null;
            console.log(user_id);
            const job_id = jobId;
            const message = formData.get('message');
            const rating = formData.get('ratings');

            try {
                const response = await fetch('/api/reviews/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ user_id, job_id, rating,message })
                });

                if (response.ok) {
                    successDiv.innerText = "Job Successfully Created";
                    window.location.href = '/jobs';
                } else {
                    failDiv.innerText = "review creation failed, please try again";
                }
            } catch (error) {
                console.log("An error occurred: ", error);
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            displayJobDetails(jobId);
            fetchReviews();
        });
    </script>
</body>
</html>
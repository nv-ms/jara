<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jara</title>
    <link rel="shortcut icon" href='../public/images/logo.png' type="image/x-icon">
    <style>
        * {
            margin: 0px;
            font-family:system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            box-sizing: border-box;
            color: black;
        }
        .head{
            width: 100%;
            position: fixed;
            display: flex;
            top: 0;
            padding: 10px;
            margin-top: -10px;
            background-color: #007bff;
            flex-direction: column;
            z-index: 2;
        }
       
        .header{
            width: 100%;
            background-color: #007bff;
            display: flex;
            justify-content: start;
            height: 100px;
            color: white;
        }
        .logo{
            padding: 10px;
        }
        .links{
            width: 100%;
            display: flex;
            justify-content: flex-end;
            align-items: center;
            text-align: center;
            font-size: 17px;
        }
        .link{
            background-color: #008100;
            color: white;
            margin: 5px;
            width: 100px;
            height: 40px;
            padding: 10px;
            text-decoration: none;
            
            border-radius: 5px;
        }
        .link:hover{
            background-color: #00000065;
            transition: .5s;
        }
        .searchBar{
            margin-top:-4% ;
            width: 100%;
            display: flex;
            justify-content: center;
        }
        .keyword{
            border: none;
            text-align: center;
            height: 30px;
            width: 300px;
            font-size: 15px;
            margin: 5px;
            border-radius: 20px;
        }
        .submit{
            margin: 5px;
            height: 30px;
            border: none;
            background-color: #ff5e00;
            color: white;
            font-size: 20px;
            border-radius: 20px;
            width: 100px;
        }
        .submit:hover{
            background-color: rgba(0, 0, 0, 0.521);
            transition: .5s;
            cursor: pointer;
        }
        

        /* Spinner*/
        .spinner{
            display:none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }
        .loader {
            top: 50%;
            left: 50%;
            font-size: 10px;
            width: 1em;
            height: 1em;
            border-radius: 50%;
            position: fixed;
            text-indent: -9999em;
            animation: mulShdSpin .7s infinite ease;
            transform: translateZ(0);
            z-index: 2000;
        }
        @keyframes mulShdSpin {
            0%,
            100% {
                box-shadow: 0em -2.6em 0em 0em #ffffff, 1.8em -1.8em 0 0em rgba(255,255,255, 0.2), 2.5em 0em 0 0em rgba(255,255,255, 0.2), 1.75em 1.75em 0 0em rgba(255,255,255, 0.2), 0em 2.5em 0 0em rgba(255,255,255, 0.2), -1.8em 1.8em 0 0em rgba(255,255,255, 0.2), -2.6em 0em 0 0em rgba(255,255,255, 0.5), -1.8em -1.8em 0 0em rgba(255,255,255, 0.7);
            }
            12.5% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.7), 1.8em -1.8em 0 0em #ffffff, 2.5em 0em 0 0em rgba(255,255,255, 0.2), 1.75em 1.75em 0 0em rgba(255,255,255, 0.2), 0em 2.5em 0 0em rgba(255,255,255, 0.2), -1.8em 1.8em 0 0em rgba(255,255,255, 0.2), -2.6em 0em 0 0em rgba(255,255,255, 0.2), -1.8em -1.8em 0 0em rgba(255,255,255, 0.5);
            }
            25% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.5), 1.8em -1.8em 0 0em rgba(255,255,255, 0.7), 2.5em 0em 0 0em #ffffff, 1.75em 1.75em 0 0em rgba(255,255,255, 0.2), 0em 2.5em 0 0em rgba(255,255,255, 0.2), -1.8em 1.8em 0 0em rgba(255,255,255, 0.2), -2.6em 0em 0 0em rgba(255,255,255, 0.2), -1.8em -1.8em 0 0em rgba(255,255,255, 0.2);
            }
            37.5% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.2), 1.8em -1.8em 0 0em rgba(255,255,255, 0.5), 2.5em 0em 0 0em rgba(255,255,255, 0.7), 1.75em 1.75em 0 0em #ffffff, 0em 2.5em 0 0em rgba(255,255,255, 0.2), -1.8em 1.8em 0 0em rgba(255,255,255, 0.2), -2.6em 0em 0 0em rgba(255,255,255, 0.2), -1.8em -1.8em 0 0em rgba(255,255,255, 0.2);
            }
            50% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.2), 1.8em -1.8em 0 0em rgba(255,255,255, 0.2), 2.5em 0em 0 0em rgba(255,255,255, 0.5), 1.75em 1.75em 0 0em rgba(255,255,255, 0.7), 0em 2.5em 0 0em #ffffff, -1.8em 1.8em 0 0em rgba(255,255,255, 0.2), -2.6em 0em 0 0em rgba(255,255,255, 0.2), -1.8em -1.8em 0 0em rgba(255,255,255, 0.2);
            }
            62.5% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.2), 1.8em -1.8em 0 0em rgba(255,255,255, 0.2), 2.5em 0em 0 0em rgba(255,255,255, 0.2), 1.75em 1.75em 0 0em rgba(255,255,255, 0.5), 0em 2.5em 0 0em rgba(255,255,255, 0.7), -1.8em 1.8em 0 0em #ffffff, -2.6em 0em 0 0em rgba(255,255,255, 0.2), -1.8em -1.8em 0 0em rgba(255,255,255, 0.2);
            }
            75% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.2), 1.8em -1.8em 0 0em rgba(255,255,255, 0.2), 2.5em 0em 0 0em rgba(255,255,255, 0.2), 1.75em 1.75em 0 0em rgba(255,255,255, 0.2), 0em 2.5em 0 0em rgba(255,255,255, 0.5), -1.8em 1.8em 0 0em rgba(255,255,255, 0.7), -2.6em 0em 0 0em #ffffff, -1.8em -1.8em 0 0em rgba(255,255,255, 0.2);
            }
            87.5% {
                box-shadow: 0em -2.6em 0em 0em rgba(255,255,255, 0.2), 1.8em -1.8em 0 0em rgba(255,255,255, 0.2), 2.5em 0em 0 0em rgba(255,255,255, 0.2), 1.75em 1.75em 0 0em rgba(255,255,255, 0.2), 0em 2.5em 0 0em rgba(255,255,255, 0.2), -1.8em 1.8em 0 0em rgba(255,255,255, 0.5), -2.6em 0em 0 0em rgba(255,255,255, 0.7), -1.8em -1.8em 0 0em #ffffff;
            }
        }

        .content {
            width: 100%;
            margin-top: 100px;
            padding: 5px;
        }
        

        .content .homeTitle{
            text-align: center;
        }
        .content .mainFilter{
            display: none;
            position: absolute;
            right: 25%;
            margin-left: 10px;
            width:40%;
            height: 25%;
            border-radius: 10px;
            padding: 5px;
            margin-right:5px;
            float: right;
            background-color: #d1d1d1;
            box-shadow:1px 2px 3px 10px rgba(255,255,255,.1);
        }
        .content .filterDiv{
            display: none;
            position: absolute;
            margin-left: 10px;
            right: 25%;
            width:40%;
            height: 25%;
            border-radius: 10px;
            padding: 5px;
            margin-right:5px;
            float: right;
            background-color: #d1d1d1;
            box-shadow:1px 2px 3px 10px rgba(255,255,255,.1);
        }
        .content .filter-button{
            float: right;
            padding: 5px;
            margin-left: 5%;
            margin-right: 50px;
            background-color: #006eff;
            outline: none;
            border: none;
            color: whitesmoke;
            width: 50px;
            height: 30px;
            border-radius: 20px;
            align-self: center;
        }
        .content .filter-button:hover{
            background-color: #00295f;
        }

        .content .filter-buttons{
            padding: 5px;
            float: right;
            background-color: #bebebe;
            outline: none;
            border: none;
            color: rgb(54, 54, 54);
            width: 75px;
            height: 30px;
            border-radius: 20px;
            align-self: center;
        }
        .content .filter-buttons:hover{
            background-color: #333;
            color: #bebebe;
        }

        .content .filterDiv{
            display: none;
        }

        .job-div{
            margin:20px;
            padding:10px 16px;
            background-color: rgb(240, 240, 240);
            border-bottom: 1px solid rgb(243, 243, 243);
            box-shadow: 2.5px 2.5px 5px rgba(31, 31, 31, 0.2);
            border-radius: 5px;
        }

        .job-div:hover{
            box-shadow: 5px 15px 25px rgba(0, 0, 0, 0.2);
            background-color: rgb(228, 228, 228);
            cursor: pointer;
            transition: .25s;
            scroll-behavior:smooth;
        }

        .job-div .category-name{
            font-size: 15px;
            margin-bottom: 4px;
            text-decoration: underline;
        }

        .job-div .job-title{
            color: #006eff;
            font-size: 30px;
        }

        .job-div .salary-range{
            color: #207eaa;
            font-size: 17px;
            z-index: 1;
            font-weight:1000;
            float:right;
        }

        .job-div .jobDescription{
            z-index: 0;
            word-wrap:normal;
            word-break:break-all;
            font-size: 15px;
        }

        .job-div .job-location{
            font-size: 20px;
            z-index: 1;
            font-weight: bolder;
            float: right;
        }

        .job-div .job-posted-date{
            font-weight: 1000;
            margin-top: 6px;
            font-size: 15px;
            z-index: 1;
        }


        .overlay{
            display:none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            z-index: 998;
        }

        .createJob{
            display:none;
            position: relative;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f9f9f9;
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 1rem;
            max-width: 400px;
            width: 100%;
            z-index: 9999;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }
        .footer{
            width: 100%;
            display: flex;
            flex-direction: column;
        }
       
        .navButtons{
            width: 100%;
            display: flex;
            justify-content: center;
        }
        .pageButton{
            background-color: #007bff;
            border-radius: 5px;
            color: white;
            border: none;
            padding: 5px 10px;
            margin: 0 5px;
            cursor: pointer;
        }
        .pageButton:hover{
            transition: .3s;
            border-radius: 5px;
            background-color: white;
            outline: 1px solid #007bff;
            color: #007bff;
        }
        .currentPage {
            background-color: #ff5e00;
            color: white;
            outline: none;
            border-radius: 5px;
            border: none;
            padding: 5px 10px;
            margin: 0 5px;
            cursor: pointer;
        }
        .currentPage:hover{
            transition: .3s;
            border-radius: 5px;
            background-color: white;
            outline: 1px solid #ff5e00;
            color: #ff5e00;
        }
        .footlinks{
            display: flex;
            justify-content: space-between;
        }
       
    @media (max-width:600px){
        .headNav .headnavH1{
            font-size: 25px;
            text-align: center;
            z-index: 3;
            cursor: pointer;
            color: #333;
            background-color: #c9c9c9;
            z-index: 2;
            width: 100%;
        }
    }
    </style>
</head>
<body class="main">
    <div class="head">
        <div class="header">
            <img class="logo" src="../public/images/logowhite.png" alt="logo" width="75px" height="75px">
            <div class="links">
                <a class="link" href="#">Gigs</a>
                <a class="link" href="/home">Home</a>
                <a class="link" href="/postJob">Post a Job</a>
                <a class="link" href="/profile">My Profile</a>
            </div>
        </div>
        
   
        <div class="search">
            <form id="searchForm" class="searchBar" method="post">
                <input type="search" name="keyword" class="keyword" id="keyword" placeholder="Search . . ." required autocomplete="off">
                <button type="submit" class="submit" id="searchBtn">Search</button>
            </form>
        </div>
    </div>

    <main class="content" id="content_body">
        
        <h1 class="H1intro">Welcome to Jara, your dream job is just a click away</h1>
        <div id="mainFilter" class="mainFilter">
            <a href="" onclick="toggleFilter(mainFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            Main filter
        </div>

        <!-- Filtering Buttons -->
        <button type="button" id="filter-button" class="filter-button" onclick="toggleFilter(mainFilter);">Filter</button>
        <!-- image for filter -->

        <button type="button" id="salaryFilterbtn" class="filter-buttons" onclick="toggleFilter(salaryFilter);">Salary</button>
        <button type="button" id="dateFilterbtn" class="filter-buttons" onclick="toggleFilter(dateFilter);">Date</button>
        <button type="button" id="categoryFilterbtn" class="filter-buttons" onclick="toggleFilter(categoryFilter);">Category</button>

        <div class="filterDiv" id="salaryFilter">
            <a href="" onclick="toggleFilter(salaryFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            <form id="salaryFilter" method="post">
                <input type="number" name="minSalary" id="minSalary" placeholder="min-salary">
                <input type="number" name="maxSalary" id="maxSalary" placeholder="max-salary">
            </form>
        </div>

        <div class="filterDiv" id="dateFilter">
            <a href="" onclick="toggleFilter(dateFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            <form action="" id="dateFilter">
                <input type="date" name="startDate" id="startDate">
                <input type="date" name="endDate" id="endDate">
            </form>
        </div>

        <div class="filterDiv" id="categoryFilter">
            <a href="" onclick="toggleFilter(categoryFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            <form action="" id="categoryFilter" >
                <label for="category">Category</label>
                <input type="text" name="category" id="categoryFilter">
            </form>
        </div>

        <div class="spinner">
            <div class="loader"></div>
        </div>

        <div class="job-container">
            <div id="jobList"></div>
        </div>

        <div class="searchResult"></div>

    </main>

    <footer class="footer">
        <div class="navButtons" id="navButtons"></div>          
        <div class="footlinks">
            <a href = "/home" class="copyright">© 2023 Nams</a>
            <a href = "#" class="Nams">Powered by NVMS softwares</a>
        </div>
    </footer>

    <script>
        const openJ = (jobId) => {
            const url = `/jobs?asfdight/tyu/23/4r/typ-oup.i_oid=${encodeURIComponent(jobId)}`;
            window.location.href = url;
        }

        const loaderContainer = document.getElementsByClassName("loader")[0];
        const overlayPanel = document.getElementsByClassName("overlay")[0];
        const spinner = document.getElementsByClassName("spinner")[0];
        const jobPanel = document.getElementsByClassName("createJob")[0];
        const submitButton = document.getElementById('submitButton');
        let totalJobs;
        let jobsToDisplay = 10;

        // Filter divs
        const mainFilter = document.getElementById('mainFilter');
        const filterButtons = document.getElementsByClassName('filter-buttons');
        const salaryFilter = document.getElementById('salaryFilter');
        const dateFilter = document.getElementById('dateFilter');
        const categoryFilter = document.getElementById('categoryFilter');

        const mainPage = document.getElementById('content_body');

        spinner.style.display = 'block';

        const toggleFilter = (filterElement) => {
            const filters = [salaryFilter, dateFilter, categoryFilter, mainFilter];
            filters.forEach((filter) => {
                filter.style.display = filter === filterElement && window.getComputedStyle(filter).display !== "block"? "block": "none";
            });
        };

        const toggleJobDescription = () => {
            if (window.getComputedStyle(jobDescription).display === "block") {
                jobDescription.style.display = "none";
                mainPage.style.display = "block";
            } else {
                jobDescription.style.display = "block";
                mainPage.style.display = "none";
            }
            spinner.style.display = "none";
        };

        const toggleJobPanel = () => {
            if (window.getComputedStyle(jobPanel).display === "block") {
                jobPanel.style.display = "none";
                overlayPanel.style.display = "none";
            } else {
                jobPanel.style.display = "block";
                overlayPanel.style.display = "block";
            }
        };

        async function fetchAndDisplayJobs(startIndex, endIndex) {
            spinner.style.display = "block";
            try {
                const response = await fetch(`/api/jobs/fetchJobs/${startIndex}/${endIndex}`);
                if (response.ok) {                    
                    const responseData = await response.json();

                    const navButtons = document.getElementById('navButtons');
                    navButtons.innerHTML = ""
                    const totalJobs = responseData.totalJobs;
                    const pageIndex = Math.ceil(endIndex/jobsToDisplay);

                    const startIndexButton = document.createElement('button');
                    startIndexButton.classList.add('pageButton');
                    startIndexButton.textContent = '<<';
                    const endIndexButton = document.createElement('button');
                    endIndexButton.classList.add('pageButton');
                    endIndexButton.textContent = ">>";
                    const previousIndexButton = document.createElement('button');
                    previousIndexButton.classList.add('pageButton');
                    previousIndexButton.textContent = "<";
                    const nextIndexButton = document.createElement('button');
                    nextIndexButton.classList.add('pageButton');
                    nextIndexButton.textContent = ">";

                    navButtons.appendChild(startIndexButton);
                    navButtons.appendChild(previousIndexButton);

                    const totalButtons = Math.ceil((totalJobs - jobsToDisplay) / jobsToDisplay);
                    for(i = 1; i < totalButtons; i++){
                        const pageButton = document.createElement('button');
                        if(i == (pageIndex - 1)){
                            pageButton.classList.add('currentPage');
                        }else if(i != (pageIndex - 1)){
                            pageButton.classList.add('pageButton');
                        }
                        
                        pageButton.textContent = i;
                        const newstartIndex =  i * 10;
                        const newEndIndex = (newstartIndex + jobsToDisplay)-1;

                        pageButton.addEventListener('click',function(){
                            fetchAndDisplayJobs(newstartIndex,newEndIndex);
                        });
                        
                        navButtons.appendChild(pageButton);                        
                    }
                    navButtons.appendChild(nextIndexButton);
                    navButtons.appendChild(endIndexButton);
                    
                    if (pageIndex == 1) {
                        previousIndexButton.style.display = 'none';
                        startIndexButton.style.display = 'none';
                    }else if(pageIndex == 2){
                        previousIndexButton.style.display = 'block';
                        startIndexButton.style.display = 'none';
                    }else if(pageIndex >= 3){
                        previousIndexButton.style.display = 'block';
                        startIndexButton.style.display = 'block'
                    }
                    if(pageIndex == (totalButtons - 1)){
                        nextIndexButton.style.display = 'none';
                        endIndexButton.style.display = 'block';
                    }else if(pageIndex == totalButtons){
                        nextIndexButton.style.display = 'none';
                        endIndexButton.style.display = 'none';
                    }if(totalButtons == 0){
                        nextIndexButton.style.display = 'none';
                        endIndexButton.style.display = 'none';
                    }

                    startIndexButton.addEventListener('click', function () {
                        const newstartIndex = 0;
                        const newEndIndex = jobsToDisplay - 1;
                        //fetchAndDisplayJobs(newstartIndex, newEndIndex);
                        console.log(newstartIndex, newEndIndex)
                    });
                    previousIndexButton.addEventListener('click', function(){
                        const newStartIndex = startIndex - jobsToDisplay;
                        const newEndIndex = endIndex - jobsToDisplay;
                        fetchAndDisplayJobs(newStartIndex, newEndIndex);
                    });
                    nextIndexButton.addEventListener('click', function(){
                        const newStartIndex = endIndex+1;
                        const newEndIndex = newStartIndex + jobsToDisplay-1;
                        fetchAndDisplayJobs(newStartIndex, newEndIndex);
                    });
                    endIndexButton.addEventListener('click', function(){
                        const newendIndex = totalButtons * jobsToDisplay - 1;
                        const newStartIndex = newendIndex - jobsToDisplay + 1;
                        fetchAndDisplayJobs(newStartIndex, newendIndex);
                    });

                    const jobs = responseData.jobs;
                    const jobListContainer = document.getElementById('jobList');
                    jobListContainer.innerHTML = '';

                    const titleHeader = document.createElement('h2');
                    titleHeader.classList.add('titleHeader');
                    titleHeader.textContent = "Job Listing";
                    jobListContainer.appendChild(titleHeader);

                    jobs.forEach((job) => {
                        const jobDiv = document.createElement('div');
                        jobDiv.classList.add('job-div');

                        const TypePara = document.createElement('h3');
                        TypePara.classList.add('job-type');
                        TypePara.textContent = job.job_type;

                        const titleHeader = document.createElement('h2');
                        titleHeader.classList.add('job-title');
                        titleHeader.textContent = job.job_title;

                        const salaryPara = document.createElement('p');
                        salaryPara.classList.add('salary-range');
                        if (job.max_salary === null || job.max_salary == 0 || job.max_salary === job.min_salary) {
                            salaryPara.textContent = `kes ${job.min_salary}`;
                        } else {
                            salaryPara.textContent = (job.min_salary <= job.max_salary)?`kes ${job.min_salary} - ${job.max_salary}`:`kes ${job.max_salary} - ${job.min_salary}`;
                        }   

                        const descriptionPara = document.createElement('p');
                        descriptionPara.classList.add('jobDescription');
                        descriptionPara.textContent = job.short_job_description;

                        const locationPara = document.createElement('p');
                        locationPara.classList.add('job-location');
                        locationPara.textContent = `${job.job_location}`;

                        const postedDatePara = document.createElement('div');
                        postedDatePara.classList.add('job-posted-date');
                        postedDatePara.textContent = `Posted Date: ${job.posted_date}`;

                        jobDiv.onclick = function() {
                            openJ(jobDiv.id);
                        };
                        jobDiv.appendChild(TypePara);
                        jobDiv.appendChild(salaryPara);
                        jobDiv.appendChild(titleHeader);
                        jobDiv.appendChild(descriptionPara);
                        jobDiv.appendChild(locationPara);
                        jobDiv.appendChild(postedDatePara);
                        jobDiv.id = `${job.job_id}`;
                        jobListContainer.appendChild(jobDiv);
                    });
                } else {
                    console.error('Failed to fetch job data');
                }
            } catch (error) {
                console.error('Fetch error:', error);
            }
            spinner.style.display = "none";
        }
        document.getElementById('searchForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const formData = new FormData(this);
            const searchBtn = document.getElementById('searchBtn');
            const keyword = formData.get('keyword');
            searchJobs(keyword,0,9);
        });
        //searching for job details
        const searchJobs = async (keyword, startIndex, endIndex) =>{
            spinner.style.display = "block";
            try {
                let url = `/api/jobs/search/${encodeURIComponent(keyword)}/${startIndex}/${endIndex}`;
                const jobListContainer = document.getElementById('jobList');

                const response = await fetch(url);

                if (response.ok) {
                    const sentKeyword = keyword;
                    const responseData = await response.json();
                    const navButtons = document.getElementById('navButtons');
                    navButtons.innerHTML = ""
                    const totalJobs = responseData.totalJobs;
                    const pageIndex = Math.ceil(endIndex/jobsToDisplay);

                    const startIndexButton = document.createElement('button');
                    startIndexButton.classList.add('pageButton');
                    startIndexButton.textContent = '<<';
                    const endIndexButton = document.createElement('button');
                    endIndexButton.classList.add('pageButton');
                    endIndexButton.textContent = ">>";
                    const previousIndexButton = document.createElement('button');
                    previousIndexButton.classList.add('pageButton');
                    previousIndexButton.textContent = "<";
                    const nextIndexButton = document.createElement('button');
                    nextIndexButton.classList.add('pageButton');
                    nextIndexButton.textContent = ">";

                    navButtons.appendChild(startIndexButton);
                    navButtons.appendChild(previousIndexButton);

                    const totalButtons = Math.ceil((totalJobs - jobsToDisplay) / jobsToDisplay);

                    for(i = 1; i < totalButtons; i++){
                        const pageButton = document.createElement('button');
                        if(i == (pageIndex - 1)){
                            pageButton.classList.add('currentPage');
                        }else if(i != (pageIndex - 1)){
                            pageButton.classList.add('pageButton');
                        }
                        
                        pageButton.textContent = i;
                        const newstartIndex =  i * 10;
                        const newEndIndex = (newstartIndex + jobsToDisplay)-1;

                        pageButton.addEventListener('click',function(){
                            searchJobs(sentKeyword,newstartIndex,newEndIndex);
                        });
                        
                        navButtons.appendChild(pageButton);                        
                    }
                    navButtons.appendChild(nextIndexButton);
                    navButtons.appendChild(endIndexButton);
                    
                    if (pageIndex == 1) {
                        previousIndexButton.style.display = 'none';
                        startIndexButton.style.display = 'none';
                    }else if(pageIndex == 2){
                        previousIndexButton.style.display = 'block';
                        startIndexButton.style.display = 'none';
                    }else if(pageIndex >= 3){
                        previousIndexButton.style.display = 'block';
                        startIndexButton.style.display = 'block'
                    }
                    if(pageIndex == (totalButtons - 1)){
                        nextIndexButton.style.display = 'none';
                        endIndexButton.style.display = 'block';
                    }else if(pageIndex == totalButtons){
                        nextIndexButton.style.display = 'none';
                        endIndexButton.style.display = 'none';
                    }
                    if(totalButtons == 0){
                        nextIndexButton.style.display = 'none';
                        endIndexButton.style.display = 'none';
                    }

                    startIndexButton.addEventListener('click', function () {
                        const newstartIndex = 0;
                        const newEndIndex = jobsToDisplay - 1;
                        searchJobs(sentKeyword,newstartIndex, newEndIndex);
                    });
                    previousIndexButton.addEventListener('click', function(){
                        const newStartIndex = startIndex - jobsToDisplay;
                        const newEndIndex = endIndex - jobsToDisplay;
                        searchJobs(sentKeyword,newStartIndex, newEndIndex);
                    });
                    nextIndexButton.addEventListener('click', function(){
                        const newStartIndex = endIndex+1;
                        const newEndIndex = newStartIndex + jobsToDisplay-1;
                        searchJobs(sentKeyword,newStartIndex, newEndIndex);
                    });
                    endIndexButton.addEventListener('click', function(){
                        const newendIndex = totalButtons * jobsToDisplay - 1;
                        const newStartIndex = newendIndex - jobsToDisplay + 1;
                        searchJobs(sentKeyword,newStartIndex, newendIndex);
                    });
                    const jobs = responseData.jobs;

                    jobListContainer.innerHTML = '';
                    const titleHeader = document.createElement('h2');
                    titleHeader.classList.add('searchHeader');
                    titleHeader.textContent = `Search Results for: ${keyword}`;
                    jobListContainer.appendChild(titleHeader);

                    if (jobs.length === 0) {
                        const noResultsPara = document.createElement('p');
                        noResultsPara.textContent = 'No jobs found matching the search criteria.';
                        jobListContainer.appendChild(noResultsPara);
                    } else {
                        jobs.forEach((job) => {
                            const jobDiv = document.createElement('div');
                        jobDiv.classList.add('job-div');

                        const TypePara = document.createElement('h3');
                        TypePara.classList.add('job-type');
                        TypePara.textContent = job.job_type;

                        const titleHeader = document.createElement('h2');
                        titleHeader.classList.add('job-title');
                        titleHeader.textContent = job.job_title;

                        const salaryPara = document.createElement('p');
                        salaryPara.classList.add('salary-range');
                        if (job.max_salary === null || job.max_salary == 0) {
                            salaryPara.textContent = `kes ${job.min_salary}`;
                            } else {
                                salaryPara.textContent = `kes ${job.min_salary} - ${job.max_salary}`;
                            }   

                        const descriptionPara = document.createElement('p');
                        descriptionPara.classList.add('jobDescription');
                        descriptionPara.textContent = job.short_job_description;

                        const locationPara = document.createElement('p');
                        locationPara.classList.add('job-location');
                        locationPara.textContent = `${job.job_location}`;

                        const postedDatePara = document.createElement('div');
                        postedDatePara.classList.add('job-posted-date');
                        postedDatePara.textContent = `Posted Date: ${job.posted_date}`;

                        jobDiv.onclick = function() {
                            openJ(jobDiv.id);
                        };
                            jobDiv.appendChild(TypePara);
                            jobDiv.appendChild(salaryPara);
                            jobDiv.appendChild(titleHeader);
                            jobDiv.appendChild(descriptionPara);
                            jobDiv.appendChild(locationPara);
                            jobDiv.appendChild(postedDatePara);
                            jobDiv.id = `${job.job_id}`;
                            jobListContainer.appendChild(jobDiv);
                        });
                    }
                } else if(!(response.ok)){
                    jobListContainer.textContent = " ";
                    const noResultsPara = document.createElement('p');
                    noResultsPara.classList.add('noJobs');
                    noResultsPara.textContent = 'No jobs found matching the search criteria.Meanwhile you can exploe other options below...';
                    jobListContainer.appendChild(noResultsPara);
                }
            } catch (error) {
                console.error('Fetch error:', error);
            } finally {
                spinner.style.display = "none";
            }
        };

        document.addEventListener('DOMContentLoaded', () => {
            window.history.replaceState({}, document.title, "/home");
            fetchAndDisplayJobs(0,9);
        });
    </script>
</body>
</html>
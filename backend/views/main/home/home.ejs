<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jara</title>
    <link rel="stylesheet" href="../public/styles/style.css">
</head>
<body>
    <header class="headNav">
        <h1 class="headnavH1">Jara</h1>
        <nav class="navbar">
            <div class="links">
                <a href="/home">Home</a>
                <a href="/profile">My Profile</a>
                <a href="/postJob">Post a Job</a>
            </div>
            <form id="searchForm" class="searchBar" method="post">
                <input type="search" name="keyword" id="keyword" placeholder="Search . . ." required><br>
                <button type="submit" id="searchBtn">Search</button>
            </form>
        </nav>
    </header>
    <main class="content" id="content_body">
        
        <h1 class="introh1">Welcome to Jara, your dream job is just a click away</h1>
        <div id="mainFilter" class="mainFilter">
            <a href="" onclick="toggleFilter(mainFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            Main filter
        </div>

        <!-- Filtering Buttons -->
        <button type="button" id="filter-button" class="filter-button" onclick="toggleFilter(mainFilter);">Filter</button>
        <!-- image for filter -->

        <button type="button" id="salaryFilterbtn" class="filter-buttons" onclick="toggleFilter(salaryFilter);">Salary</button>
        <button type="button" id="dateFilterbtn" class="filter-buttons" onclick="toggleFilter(dateFilter);">Date</button>
        <button type="button" id="categoryFilterbtn" class="filter-buttons" onclick="toggleFilter(categoryFilter);">Category</button>

        <div class="filterDiv" id="salaryFilter">
            <a href="" onclick="toggleFilter(salaryFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            <form id="salaryFilter" method="post">
                <input type="number" name="minSalary" id="minSalary" placeholder="min-salary">
                <input type="number" name="maxSalary" id="maxSalary" placeholder="max-salary">
            </form>
        </div>

        <div class="filterDiv" id="dateFilter">
            <a href="" onclick="toggleFilter(dateFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            date div
        </div>

        <div class="filterDiv" id="categoryFilter">
            <a href="" onclick="toggleFilter(categoryFilter); return false;" style="text-decoration: none; float: right; background-color: red;border-radius: 50px;color: white;width: 25px;height: 25px;text-align: center;">X</a>
            category div
        </div>

        <!-- Loading Spinner -->
        <div class="spinner">
            <div class="loader"></div>
        </div>

        <!-- Create job popup sub-menu -->
        

        <!-- Displaying job listings -->
        <div class="job-container">
            <div id="jobList"></div>
        </div>

        <!-- For one to get search results and filtering plus all that -->
        <div class="searchResult"></div>

    </main>

    <footer class="footer">
        <a href = "/home" class="copyright">Â© 2023 Nams</a>
        <a href = "#" class="Nams">Powered by NVMS softwares</a>
    </footer>

    <script>

        const openJ = (jobId) => {
            const url = `/jobs?asfdight/tyu/23/4r/typ-oup.i_oid=${encodeURIComponent(jobId)}`;
            window.location.href = url;
        }

        const loaderContainer = document.getElementsByClassName("loader")[0];
        const overlayPanel = document.getElementsByClassName("overlay")[0];
        const spinner = document.getElementsByClassName("spinner")[0];
        const jobPanel = document.getElementsByClassName("createJob")[0];
        const submitButton = document.getElementById('submitButton');

        // Filter divs
        const mainFilter = document.getElementById('mainFilter');
        const filterButtons = document.getElementsByClassName('filter-buttons');
        const salaryFilter = document.getElementById('salaryFilter');
        const dateFilter = document.getElementById('dateFilter');
        const categoryFilter = document.getElementById('categoryFilter');

        const mainPage = document.getElementById('content_body');

        spinner.style.display = 'block';

        const toggleFilter = (filterElement) => {
            const filters = [salaryFilter, dateFilter, categoryFilter, mainFilter];
            filters.forEach((filter) => {
                filter.style.display = filter === filterElement && window.getComputedStyle(filter).display !== "block"
                ? "block": "none";
            });
        };

        const toggleJobDescription = () => {
            if (window.getComputedStyle(jobDescription).display === "block") {
                jobDescription.style.display = "none";
                mainPage.style.display = "block";
            } else {
                jobDescription.style.display = "block";
                mainPage.style.display = "none";
            }
            spinner.style.display = "none";
        };

        const toggleJobPanel = () => {
            if (window.getComputedStyle(jobPanel).display === "block") {
                jobPanel.style.display = "none";
                overlayPanel.style.display = "none";
            } else {
                jobPanel.style.display = "block";
                overlayPanel.style.display = "block";
            }
        };

        async function fetchAndDisplayJobs() {
            spinner.style.display = "block";
            try {
                const response = await fetch('/api/jobs/fetchJobs')
                if (response.ok) {
                    const responseData = await response.json();
                    const jobs = responseData.job;
                    const jobListContainer = document.getElementById('jobList');
                    jobListContainer.innerHTML = '';

                    const titleHeader = document.createElement('h2');
                    titleHeader.classList.add('titleHeader');
                    titleHeader.textContent = "Job Listings";
                    jobListContainer.appendChild(titleHeader);

                    jobs.forEach((job) => {
                        const jobDiv = document.createElement('div');
                        jobDiv.classList.add('job-div');

                        const TypePara = document.createElement('h3');
                        TypePara.classList.add('job-type');
                        TypePara.textContent = job.job_type;

                        const titleHeader = document.createElement('h2');
                        titleHeader.classList.add('job-title');
                        titleHeader.textContent = job.job_title;

                        const salaryPara = document.createElement('p');
                        salaryPara.classList.add('salary-range');
                        if (job.max_salary === null || job.max_salary == 0) {
                            salaryPara.textContent = `kes ${job.min_salary}`;
                            } else {
                                salaryPara.textContent = `kes ${job.min_salary} - ${job.max_salary}`;
                            }   

                        const descriptionPara = document.createElement('p');
                        descriptionPara.classList.add('jobDescription');
                        descriptionPara.textContent = job.short_job_description;

                        const locationPara = document.createElement('p');
                        locationPara.classList.add('job-location');
                        locationPara.textContent = `${job.job_location}`;

                        const postedDatePara = document.createElement('div');
                        postedDatePara.classList.add('job-posted-date');
                        postedDatePara.textContent = `Posted Date: ${job.posted_date}`;

                        jobDiv.onclick = function() {
                            openJ(jobDiv.id);
                        };

                        jobDiv.appendChild(TypePara);
                        jobDiv.appendChild(salaryPara);
                        jobDiv.appendChild(titleHeader);
                        jobDiv.appendChild(descriptionPara);
                        jobDiv.appendChild(locationPara);
                        jobDiv.appendChild(postedDatePara);
                        jobDiv.id = `${job.job_id}`;
                        jobListContainer.appendChild(jobDiv);
                    });
                } else {
                    console.error('Failed to fetch job data');
                }
            } catch (error) {
                console.error('Fetch error:', error);
            }
            spinner.style.display = "none";
        }

        //searching for job details
        document.getElementById('searchForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = new FormData(this);

            const searchBtn = document.getElementById('searchBtn');
            const keyword = formData.get('keyword');
            
            spinner.style.display = "block";

            try {
                let url = `/api/jobs/search/${encodeURIComponent(keyword)}`;
                const jobListContainer = document.getElementById('jobList');

                const response = await fetch(url);

                if (response.ok) {
                    const responseData = await response.json();
                    const jobs = responseData.jobs;

                    jobListContainer.innerHTML = '';
                    const titleHeader = document.createElement('h2');
                    titleHeader.classList.add('searchHeader');
                    titleHeader.textContent = "Search Results";
                    jobListContainer.appendChild(titleHeader);

                    if (jobs.length === 0) {
                        const noResultsPara = document.createElement('p');
                        noResultsPara.textContent = 'No jobs found matching the search criteria.';
                        jobListContainer.appendChild(noResultsPara);
                    } else {
                        jobs.forEach((job) => {
                            const jobDiv = document.createElement('div');
                        jobDiv.classList.add('job-div');

                        const TypePara = document.createElement('h3');
                        TypePara.classList.add('job-type');
                        TypePara.textContent = job.job_type;

                        const titleHeader = document.createElement('h2');
                        titleHeader.classList.add('job-title');
                        titleHeader.textContent = job.job_title;

                        const salaryPara = document.createElement('p');
                        salaryPara.classList.add('salary-range');
                        if (job.max_salary === null || job.max_salary == 0) {
                            salaryPara.textContent = `kes ${job.min_salary}`;
                            } else {
                                salaryPara.textContent = `kes ${job.min_salary} - ${job.max_salary}`;
                            }   

                        const descriptionPara = document.createElement('p');
                        descriptionPara.classList.add('jobDescription');
                        descriptionPara.textContent = job.short_job_description;

                        const locationPara = document.createElement('p');
                        locationPara.classList.add('job-location');
                        locationPara.textContent = `${job.job_location}`;

                        const postedDatePara = document.createElement('div');
                        postedDatePara.classList.add('job-posted-date');
                        postedDatePara.textContent = `Posted Date: ${job.posted_date}`;

                        jobDiv.onclick = function() {
                            openJ(jobDiv.id);
                        };

                        jobDiv.appendChild(TypePara);
                        jobDiv.appendChild(salaryPara);
                        jobDiv.appendChild(titleHeader);
                        jobDiv.appendChild(descriptionPara);
                        jobDiv.appendChild(locationPara);
                        jobDiv.appendChild(postedDatePara);
                        jobDiv.id = `${job.job_id}`;
                        jobListContainer.appendChild(jobDiv);
                        });
                    }
                } else if(response.notfound){
                    const noResultsPara = document.createElement('p');
                    noResultsPara.textContent = 'No jobs found matching the search criteria.';
                    jobListContainer.appendChild(noResultsPara);
                    console.error('Failed to fetch search results');
                }
            } catch (error) {
                console.error('Fetch error:', error);
            } finally {
                spinner.style.display = "none";
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            window.history.replaceState({}, document.title, "/home");
            fetchAndDisplayJobs();
        });
    </script>
</body>
</html>
